module ieee802-dot1q-mstp {
  yang-version 1.1;
  namespace "urn:ieee:std:802.1Q:yang:ieee802-dot1q-mstp";
  prefix mstp;

  import ietf-yang-types {
    prefix yang;
  }
  import ietf-interfaces {
    prefix if;
  }
  import ieee802-dot1q-bridge {
    prefix dot1q;
  }

  organization
    "IEEE 802.1 Working Group";
  contact
    "WG-URL: http://www.ieee802.org/1/
     WG-EMail: stds-802-1-l@ieee.org

     Contact: IEEE 802.1 Working Group Chair
     Postal: C/O IEEE 802.1 Working Group
            IEEE Standards Association
            445 Hoes Lane
            Piscataway, NJ 08854
            USA

     E-mail: stds-802-1-chairs@ieee.org";
  description
    "This module provides management of 802.1Q bridge components that
     support the Multiple Spanning Tree Algorithm and Protocol (MSTP).

     Copyright (C) IEEE (2024).

     This version of this YANG module is part of IEEE Std 802.1Q; see the
     standard itself for full legal notices.";

  revision 2023-11-23 {
    description
      "Published as part of IEEE Std 802.1Qcy-2024.

       The following reference statement identifies each referenced IEEE
       Standard as updated by applicable amendments.";
    reference
      "IEEE Std 802.1Q Bridges and Bridged Networks:
       IEEE Stds 802.1Q-2022, 802.1Qcy-2024.";
  }

  feature mstp {
    description
      "Multiple Spanning Tree Algorithm and Protocol supported.";
    reference
      "13.5 of IEEE Std 802.1Q";
  }

  augment "/dot1q:bridges/dot1q:bridge/dot1q:component/dot1q:bridge-mst" {
    description
      "Augment bridge component with MSTP configuration";
    container cist {
      leaf bridge-identifier {
        type uint64;
        config false;
        description
          "The Bridge Identifier for the CIST.";
        reference
          "12.8.1.1 of IEEE Std 802.1Q";
      }
      leaf topology-change {
        type boolean;
        config false;
        description
          "In an STP Bridge, the value of the Topology Change parameter,
           or in an RSTP or MSTP Bridge, asserted if the tcWhile timer
           for any Port for the CIST is non-zero.";
        reference
          "13.25.9 of IEEE Std 802.1Q";
      }
      leaf regional-root-identifier {
        type uint64;
        config false;
        description
          "In an MSTP Bridge, the CIST Regional Root Identifier parameter,
           i.e., the Bridge Identifier of the current CIST Regional Root.";
        reference
          "13.16.4 of IEEE Std 802.1Q, 13.26.3 of IEEE Std 802.1Q";
      }
      leaf path-cost {
        type uint32 {
          range "0..2147483647";
        }
        config false;
        description
          "In an MSTP Bridge, the CIST Path Cost parameter, i.e., the CIST
           path cost from the transmitting Bridge to the CIST Regional Root.
           The sum (about 20 possible out of the given range) of multiple
           port path costs. Also, if the 'transmitting Bridge' is
           the 'CIST Regional Root', then this value could be zero.";
        reference
          "Item d) in 13.9, 13.10 of IEEE Std 802.1Q";
      }
      leaf max-hops {
        type int32 {
          range "6..40";
        }
        config true;
        description
          "In an MSTP Bridge, the MaxHops parameter.

           The value of this object MUST be retained across
           reinitializations of the management system.";
        reference
          "13.26.4 of IEEE Std 802.1Q";
      }
      container cist-port {
        description
          "A CIST Port.";
        leaf port-number {
          type if:interface-ref;
          description
            "Reference to the associated IETF YANG
             interface of this cist port.";
          reference
            "RFC 8343";
        }
        leaf uptime {
          type yang:timeticks;
          units "centi-seconds";
          config false;
          description
            "The Port's Uptime parameter value for the CIST, i.e., the count
             in seconds of the time elapsed since the Port was last reset or
             initialized (BEGIN, Annex E).";
        }
        leaf admin-path-cost {
          type int32 {
            range "0..200000000";
          }
          config true;
          description
            "The administratively assigned value for the contribution
             of this port to the path cost of paths toward the spanning
             tree root.

             Writing a value of '0' assigns the automatically calculated
             default Path Cost value to the port.  If the default Path
             Cost is being used, this object returns '0' when read.

             This complements the object ieee8021MstpCistPortCistPathCost,
             which returns the operational value of the port path cost.

             The value of this object MUST be retained across
             reinitializations of the management system.";
          reference
            "13.27.25 of IEEE Std 802.1Q";
        }
        leaf designated-root {
          type uint64;
          config false;
          description
            "The CIST Regional Root Identifier component of the Port's port
             priority vector, as defined in 13.10, for the CIST.";
          reference
            "13.27.47 of IEEE Std 802.1Q";
        }
        leaf topology-change-ack {
          type boolean;
          config false;
          description
            "The Port's Topology Change Acknowledge parameter value.
             True(1) if a Configuration Message with a topology change
             acknowledge flag set is to be transmitted. ";
          reference
            "13.27.72 of IEEE Std 802.1Q";
        }
        leaf hello-time {
          type int32 {
            range "100..1000";
          }
          units "centi-seconds";
          config false;
          description
            "The Port's Hello Time timer parameter value, for the CIST.
             In centi-seconds";
          reference
            "13.27.48 of IEEE Std 802.1Q";
        }
        leaf admin-edge-port {
          type boolean;
          config true;
          description
            "In a Bridge that supports the identification of edge ports, the
             Port's Admin Edge Port parameter value, for the CIST.";
          reference
            "13.27.1 of IEEE Std 802.1Q";
        }
        leaf oper-edge-port {
          type boolean;
          config false;
          description
            "In a Bridge that supports the identification of edge ports, the
             Port's operational Edge Port parameter value, for the CIST.
             True(1) if it is an operEdge Port.";
          reference
            "13.27.44 of IEEE Std 802.1Q";
        }
        leaf mac.enabled {
          type boolean;
          config true;
          description
            "In a Bridge that supports the MAC Enabled parameter, the current
             state of the MAC Enabled parameter.
             True(1) indicates that administratively the MAC is set as if it
             was connected to a point-to-point LAN.";
          reference
            "Item p) in 12.8.2.1.3 of IEEE Std 802.1Q";
        }
        leaf mac-operational {
          type boolean;
          config false;
          description
            "In a Bridge that supports the MAC Operational parameter, the
             current state of the MAC Operational parameter.
             True(1) indicates the MAC is operational.";
          reference
            "Item q) in 12.8.2.1.3 of IEEE Std 802.1Q";
        }
        leaf restricted-role {
          type boolean;
          config true;
          description
            "The current state of the restrictedRole parameter for the Port.
             True(1) causes the Port not to be selected as Root Port for the
             CIST or any MSTI. ";
          reference
            "13.27.64 of IEEE Std 802.1Q";
        }
        leaf restricted-tcn {
          type boolean;
          config true;
          description
            "The current state of the restrictedTcn parameter for the Port.
             True(1) causes the Port not to propagate topology changes to
             other Ports.";
          reference
            "13.27.65 of IEEE Std 802.1Q";
        }
        leaf role {
          type enumeration {
            enum root {
              value 1;
            }
            enum alternate {
              value 2;
            }
            enum designated {
              value 3;
            }
            enum backup {
              value 4;
            }
          }
          config false;
          description
            "The current Port Role for the Port (i.e., Root, Alternate,
             Designated, or Backup), for the CIST.";
          reference
            "Item v) in 12.8.2.1.3 of IEEE Std 802.1Q";
        }
        leaf disputed {
          type boolean;
          config false;
          description
            "The current value of the disputed variable for the CIST for
             the Port.  A value of true(1) indicates that the disputed
             variable is set.  A value of false(2) indicates that the
             agreed variable is cleared.";
          reference
            "13.27.22 of IEEE Std 802.1Q";
        }
        leaf cist-regional-root-id {
          type uint32;
          config false;
          description
            "In an MSTP Bridge, the CIST Regional Root Identifier, i.e., the
             Bridge Identifier of the current CIST Regional Root, for the CIST.";
          reference
            "Item c) in 13.9, 13.10, 13.27.47 of IEEE Std 802.1Q";
        }
        leaf cist-path-cost {
          type uint32 {
            range "0..2147483647";
          }
          config false;
          description
            "In an MSTP Bridge, the Port's Port Path Cost
             parameter value for the CIST.";
          reference
            "13.27.25 of IEEE Std 802.1Q";
        }
        leaf protocol-migration {
          type boolean;
          config true;
          description
            "In an MSTP Bridge, the current value of the mcheck variable for
             the Port.  A value of true(1) forces the state machine to
             perform functions as per 13.27.38.";
          reference
            "13.27.38 of IEEE Std 802.1Q";
        }
        leaf enable-bpdu-rx {
          type boolean;
          config true;
          description
            "In an MSTP Bridge, the enableBPDUrx parameter value.  A value
             of false(2) indicates that BPDUs are ignored.";
          reference
            "13.27.38 of IEEE Std 802.1Q";
        }
        leaf enable-bpdu-tx {
          type boolean;
          config true;
          description
            "In an MSTP Bridge, the enableBPDUtx parameter value.  A value
             of false(2) indicates that BPDUs are not transmitted.";
          reference
            "13.27.24 of IEEE Std 802.1Q";
        }
        leaf pseudo-root-id {
          type uint64;
          config true;
          description
            "In an MSTP Bridge, the pseudoRootId parameter value.";
          reference
            "13.27.51 of IEEE Std 802.1Q";
        }
        leaf is-l2gp {
          type boolean;
          config true;
          description
            "In an MSTP Bridge, the isL2gp parameter value.  A value of
             true(1) indicates this is an L2GP port.";
          reference
            "13.27.26 of IEEE Std 802.1Q";
        }
        leaf auto-edge-port {
          type boolean;
          config true;
          description
            "The administrative value of the Auto Edge Port parameter.
             A value of true(1) indicates if the Bridge detection state
             machine (BDM, 13.33) is to detect other Bridges
             attached to the LAN, and set
             ieee8021SpanningTreeRstpPortOperEdgePort automatically.
             The default value is true(1)

             This is optional and provided only by implementations
             that support the automatic identification of edge ports.

             The value of this object MUST be retained across
             reinitializations of the management system.";
          reference
            "12.8.2.1.3 of IEEE Std 802.1Q";
        }
        leaf auto-isolate-port {
          type boolean;
          config false;
          description
            "The operational value of the Isolate Port parameter.

             A value of true(1) indicates a Designated Port will
             transition to discarding if both
             ieee8021SpanningTreeRstpPortAdminEdgePort and
             ieee8021SpanningTreeRstpPortAutoEdgePort are FALSE and
             the other Bridge presumed to be attached to the same
             point-to-point LAN does not transmit periodic BPDUs.

             This is optional and provided only by implementations
             that support the automatic identification of fragile
              Bridges.";
          reference
            "12.8.2.1.3 of IEEE Std 802.1Q";
        }
      }
      list mstp {
        key "mstp-id";
        description
          "A MSTP Table entry.";
        leaf mstp-id {
          type uint32;
          description
            "In an MSTP Bridge, this parameter is the MSTID, i.e., the
             identifier of a Spanning Tree (or MST) Instance.";
        }
        leaf bridge-id {
          type uint64;
          config false;
          description
            "In an MSTP Bridge, the Bridge Identifier for the MSTI.";
          reference
            "13.26.2 of IEEE Std 802.1Q";
        }
        leaf time-since-topology-change {
          type uint32;
          units "centi-seconds";
          config false;
          description
            "In an MSTP Bridge, count in seconds of the time elapsed since
             tcWhile was last non-zero for any Port for the MSTI.";
          reference
            "13.25.9 of IEEE Std 802.1Q";
        }
        leaf topology-changes {
          type yang:counter64;
          units "topology changes";
          config false;
          description
            "In an MSTP Bridge, count of the times tcWhile has been
             non-zero for any Port for the MSTI since the Bridge was powered
             on or initialized.";
          reference
            "13.25.9 of IEEE Std 802.1Q";
        }
        leaf topology-change {
          type boolean;
          config false;
          description
            "In an MSTP Bridge, the Topology Change parameter value: true(1)
             if tcWhile is non-zero for any Port for the MSTI.";
          reference
            "13.25.9 of IEEE Std 802.1Q";
        }
        leaf designated-root {
          type uint64;
          config false;
          description
            "In an MSTP Bridge, the Designated Root parameter value, i.e., the
             Bridge Identifier of the Root Bridge for the MSTI.";
          reference
            "13.27.20 of IEEE Std 802.1Q";
        }
        leaf root-path-cost {
          type int32;
          config false;
          description
            "In an MSTP Bridge, the Root Path Cost parameter value, i.e., the
             path cost from the transmitting Bridge to the Root Bridge for
             the MSTI.";
          reference
            "13.27.20 of IEEE Std 802.1Q";
        }
        leaf root-port {
          type uint16;
          config false;
          description
            "In an MSTP Bridge, the Root Port parameter value, i.e., the Root
             Port for the MSTI.";
          reference
            "13.26.9 of IEEE Std 802.1Q";
        }
        leaf bridge-priority {
          type int32 {
            range "0..61440";
          }
          config true;
          description
            "In an MSTP Bridge, the Bridge Priority parameter value for the
             MSTI, i.e., the most significant 4 bits of the Bridge Identifier
             for the MSTI.";
          reference
            "13.26.3 of IEEE Std 802.1Q";
        }
        leaf vids0 {
          type binary {
            length "128";
          }
          config false;
          description
            "This object contains the first 1024 bits of the 4096 bit vector
             indicating which VIDs are assigned to this MSTID.  The high order
             bit of the first octet corresponds to the first bit of the vector,
             while the low order bit of the last octet corresponds to the last
             bit of this portion of the vector.  A bit that is on (equal to 1)
             indicates that the corresponding VID is assigned to this MSTID.";
        }
        leaf vids1 {
          type binary {
            length "128";
          }
          config false;
          description
            "This object contains the second 1024 bits of the 4096 bit vector
             indicating which VIDs are assigned to this MSTID.  The high order
             bit of the first octet corresponds to the first bit of this
             portion of the vector, while the low order bit of the last octet
             corresponds to the last bit of this portion of the vector.  A bit
             that is on (equal to 1) indicates that the corresponding VID is
             assigned to this MSTID.";
        }
        leaf vids2 {
          type binary {
            length "128";
          }
          config false;
          description
            "This object contains the third 1024 bits of the 4096 bit vector
             indicating which VIDs are assigned to this MSTID.  The high order
             bit of the first octet corresponds to the first bit of this
             portion of the vector, while the low order bit of the last octet
             corresponds to the last bit of this portion of the vector.  A bit
             that is on (equal to 1) indicates that the corresponding VID is
             assigned to this MSTID.";
        }
        leaf vids3 {
          type binary {
            length "128";
          }
          config false;
          description
            "This object contains the fourth 1024 bits of the 4096 bit vector
             indicating which VIDs are assigned to this MSTID.  The high order
             bit of the first octet corresponds to the first bit of this
             portion of the vector, while the low order bit of the last octet
             corresponds to the last bit of this portion of the vector.  A bit
             that is on (equal to 1) indicates that the corresponding VID is
             assigned to this MSTID.";
        }
        container mstp-port {
          description
            "A MSTP Port Table entry.";
          leaf port-number {
            type if:interface-ref;
            description
              "Reference to the associated IETF YANG
               interface of this mstp port.";
            reference
              "RFC 8343";
          }
          leaf mst-id {
            type uint32;
            description
              "In an MSTP Bridge, this parameter is the MSTID, i.e., the
               identifier of a Spanning Tree (or MST) Instance.";
          }
          leaf uptime {
            type yang:timeticks;
            units "centi-seconds";
            config false;
            description
              "In an MSTP Bridge, the Port's Uptime parameter value for the
               MSTI, i.e., the count in seconds of the time elapsed since the
               Port was last reset or initialized (BEGIN, Annex E).";
          }
          leaf state {
            type enumeration {
              enum disabled {
                value 1;
              }
              enum listening {
                value 2;
              }
              enum learning {
                value 3;
              }
              enum forwarding {
                value 4;
              }
              enum blocking {
                value 5;
              }
            }
            config false;
            description
              "In an MSTP Bridge, the current state of the Port (i.e., Disabled,
               Listening, Learning, Forwarding, or Blocking), for the MSTI.";
            reference
              "13.38 of IEEE Std 802.1Q";
          }
          leaf priority {
            type int32 {
              range "0..240";
            }
            config true;
            description
              "In an MSTP Bridge, the Port's Port Priority parameter value for
               the MSTI, i.e., the priority field for the Port Identifier for the
               Port for the MSTI.";
            reference
              "13.27.47 of IEEE Std 802.1Q";
          }
          leaf path-cost {
            type int32 {
              range "1..200000000";
            }
            config true;
            description
              "In an MSTP Bridge, the Port's Port Path Cost parameter value for
               the MSTI.";
            reference
              "13.27.33 of IEEE Std 802.1Q";
          }
          leaf designated-root {
            type uint64;
            config false;
            description
              "In an MSTP Bridge, the Regional Root Identifier component of the
               Port's MSTI port priority vector, as defined in 13.11, for the MSTI.";
            reference
              "13.27.47 of IEEE Std 802.1Q";
          }
          leaf designated-cost {
            type int32;
            config false;
            description
              "In an MSTP Bridge, the Internal Root Path Cost component of the
               Port's MSTI port priority vector, as defined in 13.11, for the MSTI.";
            reference
              "13.27.47 of IEEE Std 802.1Q";
          }
          leaf designated-bridge {
            type uint64;
            config false;
            description
              "In an MSTP Bridge, the Designated Bridge Identifier component of
               the Port's MSTI port priority vector, as defined in 13.11, for
               the MSTI.";
            reference
              "13.27.47 of IEEE Std 802.1Q";
          }
          leaf designated-port {
            type uint16;
            config false;
            description
              "In an MSTP Bridge, the Designated Port Identifier component of the
               Port's MSTI port priority vector, as defined in 13.11, for the MSTI.";
            reference
              "13.27.47 of IEEE Std 802.1Q";
          }
          leaf role {
            type enumeration {
              enum root {
                value 1;
              }
              enum alternate {
                value 2;
              }
              enum designated {
                value 3;
              }
              enum backup {
                value 4;
              }
            }
            config false;
            description
              "In an MSTP Bridge, the current Port Role for the Port (i.e., Root,
               Alternate, Designated, or Backup), for the MSTI.";
          }
          leaf disputed {
            type boolean;
            config false;
            description
              "In an MSTP Bridge, the current value of the disputed variable for
               the MSTI for the Port.";
            reference
              "13.27.22 of IEEE Std 802.1Q";
          }
          leaf admin-path-cost {
            type int32 {
              range "1..200000000";
            }
            config true;
            description
              "In an MSTP Bridge, the administrative value of the Port's
               Port Path Cost parameter value for the MSTI.

               Writing a value of '0' assigns the automatically calculated
               default Path Cost value to the Port.  If the default Path
               Cost is being used, this object returns '0' when read.

               This complements the object ieee8021MstpPortPathCost,
               which returns the operational value of the path cost.

               The value of this object MUST be retained across
               reinitializations of the management system.";
            reference
              "13.27.33 of IEEE Std 802.1Q";
          }
        }
      }
      container config-id {
        description
          "Containing the MST Configuration Identifier of a Bridge.";
        leaf format-selector {
          type int32 {
            range "0";
          }
          config true;
          description
            "In an MSTP Bridge, the Configuration Identifier Format Selector
             in use by the Bridge, in the MST Configuration Identifier. This
             has a value of 0 to indicate the format specified in IEEE Std 802.1Q.";
          reference
            "Item a) in 13.8 of IEEE Std 802.1Q";
        }
        leaf configuration-name {
          type string {
            length "32";
          }
          config true;
          description
            "In an MSTP Bridge, the Configuration Name in the MST
             Configuration Identifier.";
          reference
            "Item b) in 13.8:2 of IEEE Std 802.1Q";
        }
        leaf revision-level {
          type uint32 {
            range "0..65535";
          }
          config true;
          description
            "In an MSTP Bridge, the Revision Level in the MST
             Configuration Identifier.";
          reference
            "Item c) in 13.8 of IEEE Std 802.1Q";
        }
        leaf configuration-digest {
          type binary {
            length "16";
          }
          config false;
          description
            "In an MSTP Bridge, the Configuration Digest in the MST
             Configuration Identifier.";
          reference
            "Item d) in 13.8 of IEEE Std 802.1Q";
        }
      }
    }
  }
}
