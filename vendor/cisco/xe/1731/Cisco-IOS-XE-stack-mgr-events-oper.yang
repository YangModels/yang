module Cisco-IOS-XE-stack-mgr-events-oper {
  yang-version 1;
  namespace "http://cisco.com/ns/yang/Cisco-IOS-XE-stack-mgr-events-oper";
  prefix stack-mgr-events-oper;
  import ietf-inet-types {
    prefix inet;
  }
  import tailf-common {
    prefix tailf;
  }
  import cisco-semver {
    prefix cisco-semver;
  }
  import cisco-semver-internal {
    prefix cisco-semver-internal;
  }

  organization
    "Cisco Systems, Inc.";
  contact
    "Cisco Systems, Inc.
     Customer Service
     
     Postal: 170 W Tasman Drive
     San Jose, CA 95134
     
     Tel: +1 1800 553-NETS
     
     E-mail: cs-yang@cisco.com";
  description
    "This module contains a collection of YANG definitions
     for stack manager operations events generated from the Cisco Devices.
     These models may produce high volume of data.
     Copyright (c) 2019-2020 by Cisco Systems, Inc.
     All rights reserved";

  revision 2020-07-01 {
    description
      "- Remove unused empty container stack-mgr-events";
    reference "0.0.0";
    cisco-semver:module-version "0.0.0";
    cisco-semver-internal:os-version "17.3.1";
  }
  revision 2019-11-01 {
    description
      "- Added semantic version
       - Added version mismatch event";
    reference "1.1.0";
    cisco-semver:module-version "1.1.0";
    cisco-semver-internal:os-version "17.1.1";
  }
  revision 2019-01-24 {
    description
      "Initial revision";
    reference "1.0.0";
    cisco-semver:module-version "1.0.0";
  }

  typedef stack-mgr-notification-severity {
    type enumeration {
      enum "critical" {
        value 0;
        tailf:code-name "ENUM_stack_mgr_notification_severity_STACK_MGR_NOTF_SEV_CRITICAL";
      }
      enum "major" {
        value 1;
        tailf:code-name "ENUM_stack_mgr_notification_severity_STACK_MGR_NOTF_SEV_MAJOR";
      }
      enum "minor" {
        value 2;
        tailf:code-name "ENUM_stack_mgr_notification_severity_STACK_MGR_NOTF_SEV_MINOR";
      }
    }
    description
      "Notification severity";
  }

  typedef stack-mgr-eventq-event-type {
    type enumeration {
      enum "node-added" {
        value 0;
        description
          "Node is added to the stack";
        tailf:code-name "ENUM_stack_mgr_eventq_event_type_EVENT_ADDED";
      }
      enum "node-removed" {
        value 1;
        description
          "Node is removed from the stack";
        tailf:code-name "ENUM_stack_mgr_eventq_event_type_EVENT_REMOVED";
      }
      enum "node-new-master" {
        value 2;
        description
          "New Master or Active elected in the stack";
        tailf:code-name "ENUM_stack_mgr_eventq_event_type_EVENT_NEW_MASTER";
      }
      enum "node-version-mismatch" {
        value 3;
        description
          "Node version mismatch with other members in the stack";
        tailf:code-name "ENUM_stack_mgr_eventq_event_type_EVENT_VERSION_MISMATCH";
      }
    }
    description
      "Stack Node Role";
  }

  grouping stack-mgr-eventq-db-elem {
    description
      "Stack manager client events data model";
    leaf severity {
      type stack-mgr-events-oper:stack-mgr-notification-severity;
      description
        "Event severity";
    }
    leaf host-name {
      type string;
      description
        "Host name";
    }
    leaf system-ip {
      type inet:ip-address;
      description
        "Mgmt IP address";
    }
    leaf event {
      type stack-mgr-events-oper:stack-mgr-eventq-event-type;
      description
        "Stack Manager event type";
    }
    leaf member-number {
      type uint8;
      description
        "Stack member number for the event";
    }
    leaf serial-number {
      type string;
      description
        "Stack member serial number for the event";
    }
    leaf pid {
      type string;
      description
        "Stack member model number for the event";
    }
  }

  notification stkmevent {
    description
      "Stack manager client operational events. Provides an event for each significant activity in stack. It may generate high volume of data, depending on scale";
    uses stack-mgr-events-oper:stack-mgr-eventq-db-elem;
  }
  container Cisco-IOS-XE-stack-mgr-events-oper {
    config false;
    tailf:callpoint "stack-mgr-eventq-db";
    tailf:meta-data "callpoint" {
      tailf:meta-value "stack-mgr-eventq-db";
    }
    tailf:meta-data "greenprefix" {
      tailf:meta-value "/services;serviceName=stkmevent";
    }
    tailf:meta-data "name" {
      tailf:meta-value "Cisco-IOS-XE-stack-mgr-event-oper";
    }
    tailf:hidden "full";
  }

  grouping __yangpp_metadata {
    description
      "Internal metadata for this module and imported modules";
    leaf json-metadata-leaf {
      type empty;
      description
        "Hidden internal leaf that holds this module's metadata";
      tailf:hidden "full";
      tailf:meta-data "jsonmetadata" {
        tailf:meta-value "{\"Cisco-IOS-XE-stack-mgr-events-oper\":{\"__auto_internal_label_map__\":{\"EVENT_ADDED\":\"node-added\",\"EVENT_NEW_MASTER\":\"node-new-master\",\"EVENT_REMOVED\":\"node-removed\",\"EVENT_VERSION_MISMATCH\":\"node-version-mismatch\",\"STACK_MGR_NOTF_SEV_CRITICAL\":\"critical\",\"STACK_MGR_NOTF_SEV_MAJOR\":\"major\",\"STACK_MGR_NOTF_SEV_MINOR\":\"minor\"}}}";
      }
    }
  }

  container schema-metadata-Cisco-IOS-XE-stack-mgr-events-oper {
    description
      "Hidden internal container used for metadata";
    tailf:hidden "full";
    uses __yangpp_metadata;
  }
  container gnmi-model-data {
    description
      "This container makes accessible the information necessary to respond to a GNMI Capabilities RPC";
    tailf:hidden "full";
    tailf:meta-data "module-name" {
      tailf:meta-value "Cisco-IOS-XE-stack-mgr-events-oper";
    }
    tailf:meta-data "organization" {
      tailf:meta-value "Cisco Systems, Inc.";
    }
    tailf:meta-data "semver" {
      tailf:meta-value "2020-07-01";
    }
  }
}
