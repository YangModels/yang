module ietf-geo-location {
  namespace "urn:ietf:params:xml:ns:yang:ietf-geo-location";
  prefix geo;
  import ietf-yang-types { prefix types; }

  organization
    "IETF NETMOD Working Group (NETMOD)";
  contact
    "Christian Hopps <chopps@chopps.org>";

  // RFC Ed.: replace XXXX with actual RFC number and
  // remove this note.

  description
    "This module defines a grouping of a container object for
     specifying a location on or around an astronomical object (e.g.,
     The Earth).

     Copyright (c) 2018 IETF Trust and the persons identified as
     authors of the code. All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Simplified BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 [RFC2119] [RFC8174] when, and only when,
     they appear in all capitals, as shown here.

     This version of this YANG module is part of RFC XXXX
     (https://tools.ietf.org/html/rfcXXXX); see the RFC itself for
     full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and
  // remove this note.

  revision 2019-02-17 {
    description "Initial Revision";
    reference "RFC XXXX: YANG Geo Location";
  }

  typedef degrees {
    type decimal64 {
      fraction-digits 16;
    }
    units "decimal degrees";
    description "Coordinate value.";
  }

  feature alternate-systems {
    description
      "This feature means the device supports specifying locations
       using alternate systems for reference frames.";
  }

  grouping geo-location {
   description
      "Grouping to identify a location on an astronomical object.";

    container geo-location {
      description
        "A location on an astronomical body (e.g., The Earth)
         somewhere in a universe.";

      container reference-frame {
        description
          "The Frame of Reference for the location values.";

        leaf alternate-system {
          if-feature alternate-systems;
          type string;
          description
            "The system in which the astronomical body and
             geodetic-datum is defined. Normally, this value is not
             present and the system is the natural universe; however,
             when present this value allows for specifying alternate
             systems (e.g., virtual realities). An alternate-system
             modifies the definition (but not the type) of the other
             values in the reference frame.";
        }
        leaf astronomical-body {
          type string {
            pattern '[ -@\[-\^_-~]*';
          }
          default "earth";
          description
            "An astronomical body as named by the International
             Astronomical Union (IAU) or according to the alternate
             system if specified. Examples include 'sun' (our star),
             'earth' (our planet), 'moon' (our moon), 'enceladus' (a
             moon of Saturn), 'ceres' (an asteroid),
             '67p/churyumov-gerasimenko (a comet). The value should
             be comprised of all lower case ASCII characters not
             including control characters (i.e., values 32..64, and
             91..126). Any preceding 'the' in the name should not
             be included.";
        }
        container geodetic-system {
          description
            "The geodetic system of the location data.";
          leaf geodetic-datum {
            type string {
              pattern '[ -@\[-\^_-~]*';
            }
            default "wgs-84";
            description
              "A geodetic-datum defining the meaning of latitude,
               longitude and height. The default is 'wgs-84' which is
               used by the Global Positioning System (GPS). The value
               SHOULD be comprised of all lower case ASCII characters
               not including control characters (i.e., values 32..64,
               and 91..126). The IANA registry further restricts the
               value by converting all spaces (' ') to dashes ('-')";
          }
          leaf coord-accuracy {
            type decimal64 {
              fraction-digits 6;
            }
            description
              "The accuracy of the latitude longitude pair. When
               coord-accuracy is specified it overrides the
               geodetic-datum implied accuracy. If Cartesian
               coordinates are in use this accuracy corresponds to
               the X and Y components";
          }
          leaf height-accuracy {
            type decimal64 {
              fraction-digits 6;
            }
            units "meters";
            description
              "The accuracy of height value. When specified it
               overrides the geodetic-datum implied default. If
               Cartesian coordinates ar in use this accuracy
               corresponds to the Z component.";
          }
          // May wish to allow for height to be relative.
          // If so need to decide if we have a boolean (to ground)
          // or an enumeration (e.g., local ground, sea-floor,
          // ground floor, containing object, ...) or even allow
          // for a string for most generic but least portable
          // comparable
          // leaf height-relative {
          // }
        }
      }
      choice location {
        mandatory true;
        description
          "The location data either in lat/long or Cartesian values";
        case ellipsoid {
          leaf latitude {
            type degrees;
            mandatory true;
            description
              "The latitude value on the astronomical body. The
               definition and precision of this measurement is
               indicated by the reference-frame value.";
          }
          leaf longitude {
            type degrees;
            mandatory true;
            description
              "The longitude value on the astronomical body. The
               definition and precision of this measurement is
               indicated by the reference-frame.";
          }
          leaf height {
            type decimal64 {
              fraction-digits 6;
            }
            units "meters";
            description
              "Height from a reference 0 value. The precision and '0'
               value is defined by the reference-frame.";
          }
        }
        case cartesian {
          leaf x {
            type decimal64 {
              fraction-digits 6;
            }
            mandatory true;
            description
              "The X value as defined by the reference-frame.";
          }
          leaf y {
            type decimal64 {
              fraction-digits 6;
            }
            mandatory true;
            description
              "The Y value as defined by the reference-frame.";
          }
          leaf z {
            type decimal64 {
              fraction-digits 6;
            }
            units "meters";
            description
              "The Z value as defined by the reference-frame.";
          }
        }
      }
      container velocity {
        description
          "If the object is in motion the velocity vector describes
           this motion at the the time given by the timestamp.";

        leaf v-north {
          type decimal64 {
            fraction-digits 12;
          }
          units "meters per second";
          description
            "v-north is the rate of change (i.e., speed) towards
             truth north as defined by the ~geodetic-system~.";
        }

        leaf v-east {
          type decimal64 {
            fraction-digits 12;
          }
          units "meters per second";
          description
            "v-east is the rate of change (i.e., speed) perpendicular
             to truth-north as defined by the ~geodetic-system~.";
        }

        leaf v-up {
          type decimal64 {
            fraction-digits 12;
          }
          units "meters per second";
          description
            "v-up is the rate of change (i.e., speed) away from the
             center of mass.";
        }
      }
      leaf timestamp {
        type types:date-and-time;
        description "Reference time when location was recorded.";
      }
    }
  }
}
