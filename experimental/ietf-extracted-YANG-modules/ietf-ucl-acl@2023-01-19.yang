module ietf-ucl-acl {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-ucl-acl";
  prefix uacl;

  import ietf-access-control-list {
    prefix acl;
    reference
      "RFC 8519: YANG Data Model for Network Access
                 Control Lists (ACLs)";
  }
  import ietf-schedule {
    prefix schedule;
    reference
      "RFC XXXX: A Policy-based Network Access Control";
  }

  organization
    "IETF OPSWG Working Group";
  contact
    "WG Web: <https://datatracker.ietf.org/wg/opsawg/>
     WG List: <mailto:opsawg@ietf.org>";
  description
    "This YANG module augments the IETF access control lists(ACLs)
     module and is meant to ensure consistent enforcement of ACL
     policies based on the group identity.

     Copyright (c) 2023 IETF Trust and the persons identified
     as authors of the code. All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC
     itself for full legal notices.";

  revision 2023-01-19 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: A Policy-based Network Access Control";
  }

  identity group-acl-type {
    if-feature "group";
    base acl:acl-base;
    description
      "An ACL that matches based on an endpoint group identity,
       which can represent the collective identity of a group of
       authenticated users or enterprise end devices. An endpoint
       group identity may be carried in the outer/inner packet
       header(e.g., via NVO3 encapsulation), but may not correspond
       to any field in the packet header.";
  }
  identity mixed-ipv4-group-type {
    if-feature "mixed-ipv4-group";
    base acl:ipv4-acl-type;
    base uacl:group-acl-type;
    description
      "An ACL that contains a mix of entries that match on fields
       in IPv4 headers and endpoint group identities, which can
       represent the collective identity of a group of authenticated
       users or enterprise end devices. Matching on Layer 4 header
       fields may also exist in the ACEs.";
  }
  identity mixed-ipv6-group-type {
    if-feature "mixed-ipv6-group";
    base acl:ipv6-acl-type;
    base uacl:group-acl-type;
    description
      "An ACL that contains a mix of entries that match on fields
       in IPv6 headers and endpoint group identities, which can
       represent the collective identity of a group of authenticated
       users or enterprise end devices. Matching on Layer 4 header
       fields may also exist in the ACEs.";
  }
  identity mixed-ipv4-ipv6-group-type {
    if-feature "mixed-ipv4-ipv6-group";
    base acl:ipv4-acl-type;
    base acl:ipv6-acl-type;
    base uacl:group-acl-type;
    description
      "An ACL that contains a mix of entries that match on fields
       in IPv4 headers, IPv6 headers and endpoint group identities,
       which can represent the collective identity of a group of
       authenticated users or enterprise end devices. Matching on
       Layer 4 header fields may also exist in the ACEs.";
  }
  feature match-on-group {
    description
      "The device can support matching on endpoint groups.";
  }
  feature group {
    if-feature "uacl:match-on-group";
    description
      "Plain group ACL supported.";
  }
  feature mixed-ipv4-group {
    if-feature "acl:match-on-ipv4 and uacl:match-on-group";
    description
      "IPv4 and group ACL combinations supported.";
  }
  feature mixed-ipv6-group {
    if-feature "acl:match-on-ipv6 and uacl:match-on-group";
    description
      "IPv6 and group ACL combinations supported.";
  }
  feature mixed-ipv4-ipv6-group {
    if-feature "acl:match-on-ipv4 and acl:match-on-ipv6 and " + "
                uacl:match-on-group";
    description
      "IPv4, IPv6 and group ACL combinations supported.";
  }

  feature time-condition {
    description
      "The device can support a time condition based ACL policy
       enforcement.";
  }

  augment "/acl:acls/acl:acl" {
    description
      "add a new container to store endpoint group information.";
    container endpoint-groups {
      description
        "Container definition for the endpoint group.";
      list endpoint-group {
        key "group-id";
        description
          "Definition of the endpoint group list.";
        leaf group-id {
          type uint32 {
            range "0..4294967294";
          }
          description
            "The endpoint group ID that uniquely identifies an
             endpoint group.";
        }
        choice group-type {
          description
            "Choice of each different type of endpoint.";
          case user-group {
            description
              "The employee that actually connects to the network.";
            container user-group {
              description
                "Defines the user-group container.";
              leaf role {
                type string;
                description
                  "The common role of this user-group.";
              }
            }
          }
          case device-group {
            description
              "The static resources in a network, such as a specific
               application.";
            container device-group {
              description
                "Defines the device-group container.";
              leaf device-type {
                type string;
                description
                  "The type of the static resource.";
              }
            }
          }
        }
      }
    }
  }

  augment "/acl:acls/acl:acl/acl:aces/acl:ace/acl:matches" {
    description
      "Add another choice to allow ace match based on endpoint group
       id.";
    container endpoint-group {
      when "derived-from-or-self(/acl:acls/acl:acl/acl:type, "
         + "'uacl:group-acl-type')";
      if-feature "match-on-group";
      description
        "Add new match types.";
      leaf source-group-id {
        type leafref {
          path "../../../../../endpoint-groups/endpoint-group/"+
               "group-id";
        }
        description
          "The matched source endpoint group ID.";
      }
      leaf destination-group-id {
        type leafref {
          path "../../../../../endpoint-groups/endpoint-group/"+
               "group-id";
        }
        description
          "The matched destination endpoint group ID.";
      }
    }
  }

  augment "/acl:acls/acl:acl/acl:aces/acl:ace" {
    if-feature "time-condition";
    description
      "Add a new parameter to the Access Control Entry (ACE).";
    container time-range {
      description
        "This container defines when the access control
         entry rules are in effect.

         If it is not configured, the access control entry
         is immediately and always in effect.";
      choice time-range-type {
        description
          "Choice based on the type of the time range.";
        case periodic-range {
          description
            "A periodic range of time to take effect.";
          uses schedule:recurrence {
            augment recurrence {
              description
                "Add a parameter to specify the duration of each
                 recurrence trigger.";
              leaf duration {
                type schedule:duration {
                  pattern '((\+)?|\-)PT(0[0-9]|1[0-9]|2[0-3]):'
                        + '[0-5][0-9]:[0-5][0-9]';
                }
                description
                  "A duration of time in terms of days when policies
                   are activated in each occurrence.";
              }
            }
          }
        }
        case absolute-range {
          description
            "A single precise period of time to take effect.";
          uses schedule:period;
        }
      }
    }
  }
}
