module ietf-connectionless-oam-methods {
namespace "urn:ietf:params:xml:ns:yang:ietf-connectionless-oam-methods";
 prefix coam-methods;
 import ietf-interfaces {
  prefix if;
 }
 import ietf-connectionless-oam {
  prefix coam;
 }
  organization
    "IETF LIME Working Group";
  contact
    "Deepak Kumar dekumar@cisco.com
     Qin Wu bill.wu@huawei.com
     S Raghavan srihari@cisco.com
     Zitao Wang wangzitao@huawei.com
     R Rahman rrahman@cisco.com";
  description
    "This YANG module defines the RPC operations for
     connectionless OAM to be used within IETF
     in a protocol Independent manner.
     It is assumed that each protocol maps
     corresponding abstracts to its native format.
     Each protocol may extend the YANG model defined
     here to include protocol specific extensions";

  revision 2017-09-06{
    description
      "08 version";
    reference "draft-ietf-lime-yang-connectionless-oam-methods";
  }

  identity status-code{
   description
   "Base status code";
  }

  identity invalid-cc{
   base status-code;
   description
   "Indicates that the Continuity check message is invalid";
  }

  identity invalid-pd {
   base status-code;
   description
   "Indicates that the path discovery message is invalid";
  }

  identity status-sub-code {
   description
   "Base status sub code";
  }

  grouping rpc-input-parameters {
        container destination-tp {
        uses coam:tp-address;
        description
          "Destination test point.";
       }
       leaf source-interface {
        type if:interface-ref;
        mandatory true;
        description
          "Source interface.";
       }
      leaf outbound-interface {
        type if:interface-ref;
        mandatory true;
        description
          "Outbound interface.";
      }
      leaf vrf {
        type coam:routing-instance-ref;
        description
          "VRF instance.";
      }
    description
   "Grouping for RPC input parameters";
  }
  rpc continuity-check {
    if-feature "coam:continuity-check";
    description
      "Continuity-check RPC operation as per RFC7276.";
    input {
        uses rpc-input-parameters;
        uses coam:session-type {
        description "If session-type is specified, then session-type
        must be set to on-demand";
       }
        leaf count {
        type uint32;
        default "5";
        description
          "Specifies the number of
           packets that will be sent. By
          default, the packet number is
          set to 5.";
       }
        leaf ttl {
        type uint8;
        default "255";
        description
          "Time to live (TTL) used to limit lifetime
          of data packet transmitted in the network
          and prevent looping. The TTL value is decremented
          for every hop which the packet traverses. If the
         TTL is zero, the data packet will be discarded.";
      }
      leaf packet-size {
        type uint32 {
          range "64..10000";
        }
        default "64";
        description
          "Packet size of continuity-check message, in octets.
          By default, the packet size is set to 64 octets.";
      }
    }
    output {
      container error-code {
        leaf status-code {
          type identityref{
         base status-code;
       }
        mandatory true;
        description
         "Error code for continuity-check message. For example, Error code in
         ICMPv6 message includes
         1-Destination Unreachable
         2- Packet Too Big
         3- Time Exceeded
         4- Parameter Problem [RFC4443].";
        }
        leaf status-sub-code {
          type identityref{
          base status-sub-code;
          }
        mandatory true;
        description
         "Sub code for continuity-check message. For example Sub code in
         ICMPv6 Parameter Problem Message includes:
         1-Erroneous header field encountered
         2-Unrecognized Next Header type encountered
         3-Unrecognized IPv6 option encountered.";
        }
        description
          "Error code and Sub Code for continuity-check message.";
      }
      uses coam:continuity-check-data;
    }
  }

  rpc path-discovery {
    if-feature "coam:path-discovery";
    description
      "Path discovery RPC operation as per RFC7276.";
    input {
      uses rpc-input-parameters;
        uses coam:session-type {
        description "If session-type is specified, then session-type
        must be set to on-demand";
    }
      leaf max-ttl {
        type uint8;
        default "255";
        description
          "Maximum TTL indicates the maixmum number of hops that
          a packet is permitted to travel before being discarded
          by a router. By default, the maximimum TTL is set to 255.";
      }
    }
    output {
      list response-list {
        key "response-index";
        description
          "Path discovery response list.";
        leaf response-index {
          type uint32;
          mandatory true;
          description
            "Response index.";
        }
        leaf status-code {
          type identityref{
          base status-code;
        }
          mandatory true;
          description
            "Error code for Path Discovery message.
            For example, Error code in ICMPv6 message includes
            1-Destination Unreachable
            2- Packet Too Big
            3- Time Exceeded
            4- Parameter Problem [RFC4443]. ";
        }
        leaf status-sub-code {
          type identityref{
          base status-sub-code;
       }
          mandatory true;
          description
            "Sub code for Path Discovery message. For example Sub code in
            ICMPv6 Parameter Problem Message includes:
            1-Erroneous header field encountered
            2-Unrecognized Next Header type encountered
            3-Unrecognized IPv6 option encountered ";
        }
      }
      uses coam:path-discovery-data;
    }
  }
  }
