module ietf-connectionless-oam-methods {
namespace "urn:ietf:params:xml:ns:yang:ietf-connectionless-oam-methods";
 prefix cloam-methods;
 import ietf-interfaces {
  prefix if;
 }
 import ietf-connectionless-oam {
  prefix cl-oam;
 }
  organization
    "IETF LIME Working Group";
  contact
    "Deepak Kumar dekumar@cisco.com
     Qin Wu bill.wu@huawei.com
     S Raghavan srihari@cisco.com
     Zitao Wang wangzitao@huawei.com
     R Rahman rrahman@cisco.com";
  description
    "This YANG module defines the RPC operations for
     connectionless OAM to be used within IETF
     in a protocol Independent manner.
     It is assumed that each protocol maps
     corresponding abstracts to its native format.
     Each protocol may extend the YANG model defined
     here to include protocol specific extensions";

  revision 2017-09-06{
    description
      "08 version";
    reference "draft-ietf-lime-yang-connectionless-oam-methods";
  }

  identity protocol-id {
    description
    "A generic protocol identifier.";
  }

  identity protocol-id-internet {
    base protocol-id;
    description
      "Internet Protocols.";
  }

  identity protocol-id-proprietary {
    base protocol-id;
    description
      "Proprietary protocol (e.g.,IP SLA).";
  }

  identity protocol-id-sfc {
    base protocol-id;
    description
      "Service Function Chaining.";
  }

  identity protocol-id-mpls {
    base protocol-id;
    description
      "MPLS protocol.";
  }

  identity protocol-id-mpls-tp {
    base protocol-id;
    description
      "MPLS-TP protocol.";
  }

  identity protocol-id-twamp {
    base protocol-id;
    description
      "TWAMP protocol.";
  }

  identity protocol-id-bier {
    base protocol-id;
    description
      "BIER protocol.";
  }

  identity status-code{
   description
   "Base status code";
  }

  identity invalid-cc{
   base status-code;
   description
   "Indicates that the Continuity check message is invalid";
  }

  identity invalid-pd {
   base status-code;
   description
   "Indicates that the path discovery message is invalid";
  }

  identity status-sub-code {
   description
   "Base status sub code";
  }

  grouping rpc-input-parameters {
        container destination-tp {
        uses cl-oam:tp-address;
        description
          "Destination test point.";
       }
       leaf source-interface {
        type if:interface-ref;
        mandatory true;
        description
          "Source interface.";
       }
      leaf outbound-interface {
        type if:interface-ref;
        mandatory true;
        description
          "Outbound interface.";
      }
      leaf vrf {
        type cl-oam:routing-instance-ref;
        description
          "VRF instance.";
      }
    description
   "Grouping for RPC input parameters";
  }
  rpc continuity-check {
    if-feature "cl-oam:continuity-check";
    description
      "Continuity-check RPC operation as per RFC7276.";
    input {
        uses rpc-input-parameters;
        uses cl-oam:session-type {
        description "If session-type is specified, then session-type
        must be set to on-demand";
       }
        leaf count {
        type uint32 {
            range 0..4294967295 {
                    description
                    "The overall number of packet to be transmitted
                     by the sender. If the count is set to 4294967295,
                     it indicates that the session will be run forever";
            }
        }
        default "5";
        description
          "Specifies the number of
           packets that will be sent. By
          default, the packet number is
          set to 5.";
       }
        leaf ttl {
        type uint8;
        default "255";
        description
          "Time to live (TTL) used to limit lifetime
          of data packet transmitted in the network
          and prevent looping. The TTL value is decremented
          for every hop which the packet traverses. If the
         TTL is zero, the data packet will be discarded.";
      }
      leaf packet-size {
        type uint32 {
          range "64..10000";
        }
        default "64";
        description
          "Packet size of continuity-check message, in octets.
          By default, the packet size is set to 64 octets.";
      }
    }
    output {
      container error-code {
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used in CC. This could be a standard
             protocol (e.g., TCP/IP protocols, MPLS etc.,)
             or a proprietary protocol as identified by
             this field.";
        }
        leaf protocol-id-meta-data {
          type uint64;
          description
            "An optional meta-data related to the protocol ID.
             For e.g., this could be the Internet Protocol number
             for standard Internet Protocols for help in protocol
             processing.";
        }
        leaf status-code {
          type identityref{
            base status-code;
          }
          mandatory true;
          description
           "Error code for continuity-check message, that is
            relevant to the protocol under use for CC.
            For example if ICMP is the protocol under use, the
            error codes are as defined in [RFC4443].";
        }
        leaf status-sub-code {
          type identityref{
            base status-sub-code;
          }
          mandatory true;
          description
          "Error sub code for continuity-check message, that is
           relevant to the error-code reported of the protocol
           that is used for CC.";
        }
        description
          "Error code and Sub Code for continuity-check message.";
      }
      uses cl-oam:continuity-check-data;
    }
  }

  rpc path-discovery {
    if-feature "cl-oam:path-discovery";
    description
      "Path discovery RPC operation as per RFC7276.";
    input {
      uses rpc-input-parameters;
        uses cl-oam:session-type {
        description "If session-type is specified, then session-type
        must be set to on-demand";
    }
      leaf max-ttl {
        type uint8;
        default "255";
        description
          "Maximum TTL indicates the maixmum number of hops that
          a packet is permitted to travel before being discarded
          by a router. By default, the maximimum TTL is set to 255.";
      }
    }
    output {
      list response-list {
        key "response-index";
        description
          "Path discovery response list.";
        leaf response-index {
          type uint32;
          mandatory true;
          description
            "Response index.";
        }
        leaf protocol-id {
          type identityref {
            base protocol-id;
          }
          mandatory true;
          description
            "Protocol used in PD. This could be a standard
             protocol (e.g., TCP/IP protocols, MPLS etc.,)
             or a proprietary protocol as identified by
             this field.";
        }
        leaf protocol-id-meta-data {
          type uint64;
          description
            "An optional meta-data related to the protocol ID.
             For e.g., this could be the Internet Protocol number
             for standard Internet Protocols for help in protocol
             processing.";
        }
        leaf status-code {
          type identityref{
            base status-code;
          }
          mandatory true;
          description
           "Error code for path-discovery response message, that is
            relevant to the protocol under use for PD.
            For example if ICMP is the protocol under use, the
            error codes are as defined in [RFC4443].";
        }
        leaf status-sub-code {
          type identityref{
            base status-sub-code;
          }
          mandatory true;
          description
          "Error sub code for path-discovery message, that is
           relevant to the error-code reported of the protocol
           that is used for PD.";
        }
      }
      uses cl-oam:path-discovery-data;
    }
  }
  }
